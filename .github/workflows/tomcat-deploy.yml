name: Java CI with Maven

env:
  STACK: java
  CONTINUE_ON_ERROR: false
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  TOMCAT_HOST: 18.221.232.111
  ARTIFACT_PATH: target/*war
  CONTEXT_PATH: springboot
  PORT: 8080
  
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout repository on branch: ${{ github.REF }}'
      uses: actions/checkout@v1
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        ref: ${{ github.REF }}
        fetch-depth: 0
        
    - name: set up JDK 1.8
      id: setup_jdk
      if: ${{ env.STACK == 'java' }}
      uses: actions/setup-java@v1
      continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        java-version: '1.8'
    - name: Build with Maven
      run: mvn clean package --file pom.xml
      
    - name: SonarQube Scan
      run: mvn sonar:sonar -Dsonar.host.url=${{ env.SONAR_HOST_URL }} -Dsonar.login=${{ env.SONAR_TOKEN }}
    - uses: sonarsource/sonarqube-scan-action@master 
      with:
        args: >
          -Dsonar.projectKey=hello-springboot
          -Dsonar.sources=src/

    - name: Deploy to tomcat
      run: curl -v -u ${{ secrets.TOMCAT_USER }}:${{ secrets.TOMCAT_PASSWORD }} -T ${{ env.ARTIFACT_PATH }} 'http://'${{ env.TOMCAT_HOST }}':'${{ env.PORT }}'/manager/text/deploy?path=/'${{ env.CONTEXT_PATH }}''
